# Generated by Django 5.2.7 on 2025-10-25 13:35

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('invoices', '0006_add_lineitem_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(blank=True, max_length=200, verbose_name='Business Name')),
                ('business_email', models.EmailField(blank=True, max_length=200, verbose_name='Business Email')),
                ('business_phone', models.CharField(blank=True, max_length=50, verbose_name='Business Phone')),
                ('business_address', models.TextField(blank=True, verbose_name='Business Address')),
                ('business_website', models.URLField(blank=True, verbose_name='Website')),
                ('business_tax_id', models.CharField(blank=True, max_length=100, verbose_name='Tax ID/VAT')),
                ('business_logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Business Logo')),
                ('theme', models.CharField(choices=[('purple_pink', 'Purple & Pink (Default)'), ('blue_cyan', 'Blue & Cyan'), ('green_teal', 'Green & Teal'), ('orange_red', 'Orange & Red'), ('monochrome', 'Monochrome')], default='purple_pink', max_length=20, verbose_name='Color Theme')),
                ('custom_primary_color', models.CharField(blank=True, help_text='Hex color code (e.g., #8b5cf6)', max_length=7, verbose_name='Custom Primary Color')),
                ('custom_secondary_color', models.CharField(blank=True, help_text='Hex color code (e.g., #ec4899)', max_length=7, verbose_name='Custom Secondary Color')),
                ('paystack_public_key', models.CharField(blank=True, max_length=200, verbose_name='Paystack Public Key')),
                ('paystack_secret_key', models.CharField(blank=True, max_length=200, verbose_name='Paystack Secret Key')),
                ('paystack_webhook_secret', models.CharField(blank=True, max_length=200, verbose_name='Paystack Webhook Secret')),
                ('email_provider', models.CharField(choices=[('smtp', 'SMTP (Default)'), ('sendgrid', 'SendGrid')], default='smtp', max_length=20, verbose_name='Email Provider')),
                ('email_host', models.CharField(blank=True, default='smtp.gmail.com', max_length=200, verbose_name='Email Host')),
                ('email_port', models.IntegerField(default=587, verbose_name='Email Port')),
                ('email_username', models.CharField(blank=True, max_length=200, verbose_name='Email Username')),
                ('email_password', models.CharField(blank=True, max_length=200, verbose_name='Email Password')),
                ('email_use_tls', models.BooleanField(default=True, verbose_name='Use TLS')),
                ('sendgrid_api_key', models.CharField(blank=True, max_length=200, verbose_name='SendGrid API Key')),
                ('twilio_account_sid', models.CharField(blank=True, max_length=200, verbose_name='Twilio Account SID')),
                ('twilio_auth_token', models.CharField(blank=True, max_length=200, verbose_name='Twilio Auth Token')),
                ('twilio_whatsapp_number', models.CharField(blank=True, help_text='Format: whatsapp:+1234567890', max_length=50, verbose_name='Twilio WhatsApp Number')),
                ('whatsapp_number', models.CharField(blank=True, help_text='For Pay Now button', max_length=50, verbose_name='WhatsApp Business Number')),
                ('default_currency', models.CharField(choices=[('USD', 'US Dollar (USD)'), ('EUR', 'Euro (EUR)'), ('GBP', 'British Pound (GBP)'), ('NGN', 'Naira (NGN)'), ('CAD', 'Canadian Dollar (CAD)'), ('AUD', 'Australian Dollar (AUD)')], default='USD', max_length=3, verbose_name='Default Currency')),
                ('default_payment_terms', models.CharField(choices=[('immediate', 'Due Immediately'), ('net_15', 'Net 15 Days'), ('net_30', 'Net 30 Days'), ('net_60', 'Net 60 Days'), ('net_90', 'Net 90 Days')], default='net_30', max_length=20, verbose_name='Default Payment Terms')),
                ('default_tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Default Tax Rate (%)')),
                ('enable_paystack', models.BooleanField(default=True, verbose_name='Enable Paystack Payments')),
                ('enable_email_notifications', models.BooleanField(default=True, verbose_name='Enable Email Notifications')),
                ('enable_whatsapp_notifications', models.BooleanField(default=False, verbose_name='Enable WhatsApp Notifications')),
                ('enable_sms_notifications', models.BooleanField(default=False, verbose_name='Enable SMS Notifications')),
                ('enable_payment_reminders', models.BooleanField(default=True, verbose_name='Enable Automatic Payment Reminders')),
                ('reminder_days_before_due', models.IntegerField(default=3, verbose_name='Send Reminder (Days Before Due)')),
                ('reminder_days_after_overdue', models.IntegerField(default=3, verbose_name='Send Reminder (Days After Overdue)')),
                ('invoice_footer_text', models.TextField(blank=True, help_text='Custom text to appear at the bottom of invoices', verbose_name='Invoice Footer Text')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Settings',
                'verbose_name_plural': 'User Settings',
            },
        ),
    ]
